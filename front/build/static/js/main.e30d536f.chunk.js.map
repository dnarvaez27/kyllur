{"version":3,"sources":["NavigationBar/ChangeLocation/ReactMap.jsx","NavigationBar/ChangeLocation/ChangeLocation.jsx","NavigationBar/About/About.jsx","NavigationBar/DataShow/DataShow.jsx","NavigationBar/Queries/Queries.jsx","NavigationBar/NavigationBar.jsx","Modal/Modal.jsx","StarMap/Pin.jsx","StarMap/StarMap.jsx","FullModal/FullModal.jsx","App.jsx","serviceWorker.js","index.js"],"names":["GoogleApiWrapper","apiKey","google","center","lat","lng","onDragend","useState","_center","setCenter","useEffect","zoom","initialCenter","onClick","_mp","_m","e","nCenter","latLng","position","ChangeLocation","currentLocation","changeLocation","cancel","latitude","longitude","setPosition","id","title","navigator","geolocation","getCurrentPosition","p","coords","console","error","className","About","close","style","listStyleType","target","rel","href","DataShow","data","state","view","satellites","setState","prev","stars","changeView","attr","map","i","key","satname","intDesignator","launchDate","nombre","masa","descubrimiento","tipo_deteccion","mapView","Queries","queries","reverse","q","NavigationBar","st","or","openModal","openFullModal","accuracy","showAbout","undefined","Modal","open","content","Pin","refresh","show","setShow","xmlns","x","y","viewBox","_","fill","fillRule","d","repeatCount","dur","attributeName","begin","calcMode","keySplines","values","settings","radius","color","size","SatInfo","sat","satalt","StarInfo","star","hd","bf","gl","con","dist","hr","mag","proper","spect","ra","dec","StarMap","satelites","canvasRef","useRef","constellation","setConstellation","starStore","satsStore","lastClicked","setLastClicked","drawSatelite","context","xcoord","ycoord","img","document","getElementById","shadowColor","s","shadowBlur","shadowOffsetX","shadowOffsetY","push","w","h","drawImage","globalAlpha","drawStar","magnitude","beginPath","fillStyle","r","Math","ceil","arc","PI","_stars","_satelites","paint","length","pop","scaleCoordinate","coord","canvas","current","ctx","getContext","window","innerHeight","clearRect","forEach","point","canvasPosition","ci","redrawAll","JSON","parse","stringify","src","alt","ref","width","height","clientX","clientY","isStar","found","filter","sqrt","FullModal","wssURI","log","App","modalState","setModalState","fullModalState","setFullModalState","ready","setReady","ws","setWs","setQueries","initialFetch","nWs","WebSocket","particlesJS","load","onopen","send","onclose","onerror","err","onmessage","ev","msg","LIVE","CH_LOCATIONS","coordinates","Boolean","location","hostname","match","ReactDOM","render","serviceWorker","then","registration","unregister"],"mappings":"iaA0BeA,6BAAiB,CAC9BC,OAAQ,2CADKD,EAvBE,SAAC,GAAsF,IAApFE,EAAmF,EAAnFA,OAAmF,IAA3EC,cAA2E,MAAlE,CAAEC,IAAK,UAAWC,KAAM,YAA0C,MAA5BC,iBAA4B,MAAhB,aAAgB,IACxEC,mBAASJ,GAD+D,mBAC9FK,EAD8F,KACrFC,EADqF,KAOrG,OAJAC,qBAAU,WACRD,EAAUN,KACT,CAACA,EAAQM,IAGV,kBAAC,MAAD,CACEP,OAAQA,EACRS,KAAM,GACNC,cAAeJ,EACfL,OAAQK,EACRK,QAAS,SAACC,EAAKC,EAAIC,GACjB,IAAMC,EAAU,CAAEb,IAAKY,EAAEE,OAAOd,MAAOC,IAAKW,EAAEE,OAAOb,OACrDI,EAAUQ,GACVX,EAAUW,KAEZ,kBAAC,SAAD,CAAQE,SAAUhB,QC8BTiB,EA7CQ,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,gBAAiBC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAAa,EAEtChB,mBAAS,CAAEH,IAAKiB,EAAgBG,SAAUnB,IAAKgB,EAAgBI,YAFzB,mBAE/DN,EAF+D,KAErDO,EAFqD,KAiBtE,OACE,yBAAKC,GAAG,4BACN,6BACE,iDACA,8BAAOR,EAASf,IAAhB,KAAuBe,EAASd,KAChC,4BAAQuB,MAAM,gBAAgBf,QAfjB,WACbgB,UAAUC,YACZD,UAAUC,YAAYC,oBAAmB,SAAAC,GACvCN,EAAY,CAAEtB,IAAK4B,EAAEC,OAAOT,SAAUnB,IAAK2B,EAAEC,OAAOR,eAGtDS,QAAQC,MAAM,oBAUV,uBAAGC,UAAU,wBAGjB,6BACE,kBAAC,EAAD,CACEjC,OAAQgB,EACRb,UAAW,gBAAGF,EAAH,EAAGA,IAAKC,EAAR,EAAQA,IAAR,OAAkBqB,EAAY,CAAEtB,MAAKC,YAEpD,6BACE,4BAAQQ,QAAS,kBAAMU,MAAvB,UACA,4BAAQV,QAAS,kBAAMS,EAAe,CAAEE,SAAUL,EAASf,IAAKqB,UAAWN,EAASd,QAApF,aCSOgC,G,MA5CD,SAAC,GAAc,EAAZC,MACf,OACE,yBAAKX,GAAG,SACN,wCACA,6BACE,6CACA,+FACgE,sCADhE,MAIF,6BACE,6CACA,qIAGU,sCAHV,UAKA,wBAAIY,MAAO,CAACC,cAAe,SACzB,qGACA,gGAGJ,6BACE,kDACA,wCACS,uBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAK,yBAAlD,QADT,0EAE4B,uBAAGF,OAAO,SAASC,IAAI,sBAAsBC,KAAK,iCAAlD,qBAF5B,iFAKF,6BACE,6CACA,wCACS,uBAAGF,OAAO,SAASC,IAAI,sBAAsBC,KAAK,sBAAlD,iBADT,MACoG,uBAAGF,OAAO,SAASE,KAAK,gCAAgCD,IAAI,uBAA5D,iBAClG,6HCmCKE,G,MApEE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACHtC,mBAAS,CAAEuC,MAAO,EAAGC,KAAMF,EAAKG,aAD7B,mBACtBF,EADsB,KACfG,EADe,KAG7BvC,qBAAU,WACRuC,GAAS,SAAAC,GACP,MAAO,CACLJ,MAAOI,EAAKJ,MACZC,KAAqB,IAAfG,EAAKJ,MAAcD,EAAKG,WAAaH,EAAKM,YAGnD,CAACN,IAEJ,IAAMO,EAAa,SAACN,EAAOO,GACzB,OAAO,kBAAMJ,EAAS,CAAEH,QAAOC,KAAMF,EAAKQ,OAoC5C,OACE,yBAAK1B,GAAG,sBACN,6BACE,6BACE,4BAAQS,UAA2B,IAAhBU,EAAMA,MAAc,SAAW,GAAIjC,QAASuC,EAAW,EAAG,eAA7E,cACA,4BAAQhB,UAA2B,IAAhBU,EAAMA,MAAc,SAAW,GAAIjC,QAASuC,EAAW,EAAG,UAA7E,WAGJ,6BACGN,EAAMC,KAAKO,KAAI,SAACtC,EAAGuC,GAAJ,OA1CN,SAACvC,EAAGwC,GAClB,OAAoB,IAAhBV,EAAMA,MAEN,yBAAKU,IAAG,cAASA,IACf,iDAAmBxC,EAAEyC,UACrB,8BACE,uBAAGrB,UAAU,0BACb,8BAAOpB,EAAE0C,gBAEX,8BACE,uBAAGtB,UAAU,kBACb,8BAAOpB,EAAE2C,cAMb,yBAAKH,IAAG,eAAUA,IAChB,6CAAexC,EAAE4C,SACjB,6CAAe5C,EAAE6C,OACjB,8BAAO7C,EAAE8C,gBACT,8BAAO9C,EAAE+C,gBACT,6BACE,gCACE,uBAAG3B,UAAU,iBACb,uBAAGA,UAAU,oBAiBO4B,CAAQhD,EAAGuC,UCzC9BU,G,MAjBC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEjB,OACE,yBAAKvC,GAAG,qBACLuC,EAAQC,UAAUb,KAAI,SAACc,EAAGb,GAAJ,OACrB,yBAAKC,IAAG,eAAUD,IAChB,kCAAQa,EAAE5C,SAAV,KAAsB4C,EAAE3C,UAAxB,YCoHK4C,EAtHO,SAAC,GAAiE,IAmCrEC,EAAIC,EAnCEC,EAA8D,EAA9DA,UAAWC,EAAmD,EAAnDA,cAAenD,EAAoC,EAApCA,eAAgBuB,EAAoB,EAApBA,KAAMqB,EAAc,EAAdA,QAAc,EAErD3D,mBAAS,CAAEiB,SAAU,EAAGC,UAAW,EAAGiD,SAAU,IAFK,mBAE9EvD,EAF8E,KAEpEO,EAFoE,OAG3DnB,oBAAU,GAHiD,mBAG9EuC,EAH8E,KAGvEG,EAHuE,KAe/E0B,EAAY,WAChB1B,EAAS,GACTwB,GAAc,EAAM,kBAAC,EAAD,CAAOnC,MAAO,kBAAMkC,GAAU,OAAOI,QAuD3D,OA9BAlE,qBAAU,WACRiE,MACC,IAEHjE,qBAAU,WACM,IAAVoC,GACF2B,GAAc,EAAM,kBAAC,EAAD,CAASP,QAASA,OAEvC,CAACA,IAEJxD,qBAAU,WACRY,EAAeH,KACd,CAACA,IAEJT,qBAAU,WACJmB,UAAUC,YACZD,UAAUC,YAAYC,oBAAmB,SAAAC,GACvCN,EAAY,CAAEF,SAAUQ,EAAEC,OAAOT,SAAUC,UAAWO,EAAEC,OAAOR,eAGjES,QAAQC,MAAM,oBAEf,IAEHzB,qBAAU,WACM,IAAVoC,GACF2B,GAAc,EAAM,kBAAC,EAAD,CAAU5B,KAAMA,OAErC,CAACC,EAAOD,IAGT,yBAAKlB,GAAG,WACN,yBAAKA,GAAG,oBACN,4BAAQd,QAtEa,WACzB2D,GAAU,EAAM,kBAAC,EAAD,CACdnD,gBAAiBF,EACjBG,eAAgB,SAACU,GACfN,EAAYM,GACZwC,GAAU,OAAOI,IAEnBrD,OAAQ,kBAAMiD,GAAU,OAAOI,SAgE3B,uBAAGxC,UAAU,kBACb,kDAEF,4BAAQvB,QAAmB,IAAViC,EAAc6B,EAjDd,WACrB1B,GAAU,GACVwB,GAAc,OAAOG,IA+C0CxC,UAAqB,IAAVU,EAAc,SAAW,KA5CpFwB,EA6CA,EA7CIC,EA8CX,oCACE,uBAAGnC,UAAU,2BACb,wCA/CFU,IAAUwB,EACbC,EACA,oCAAE,uBAAGnC,UAAU,wBAAwB,2CAkD1C,yBAAKT,GAAG,uBC9ECkD,G,MAdD,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACrB,OACE,yBAAKpD,GAAG,QAAQS,UAAY0C,EAAkB,GAAX,UACjC,yBAAKnD,GAAG,aACR,yBAAKA,GAAG,iBAAiBoD,MCmChBC,G,MAzCH,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACZvE,qBAAU,cAAQ,CAACuE,IADM,MAED1E,oBAAS,GAFR,mBAElB2E,EAFkB,KAEZC,EAFY,KAIzB,OACE,oCACE,yBACIC,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFC,QAAQ,cACR5D,GAAG,UACHd,QAAS,SAAA2E,GAAC,OAAEL,GAAQ,IACpB/C,UAAW8C,EAAK,YAAY,IAC9B,0BACEO,KAAK,UACLC,SAAS,UACTC,EAAE,kIACF,6BACEhE,GAAG,qBACHiE,YAAY,IACZC,IAAI,OACJC,cAAc,IACdL,KAAK,SACLM,MAAM,QACNC,SAAS,SACTC,WAAW,mCACXC,OAAO,kaAOb,yBAAKvE,GAAG,aAAaS,UAAW8C,EAAK,GAAG,QACtC,mDChCFiB,EAKO,CACTC,OAAQ,EACRC,MAAO,UACPC,KAAM,IAQJC,EAAU,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACjB,OACE,6BACE,8BAAM,yCACN,8BAAM,oCAAN,IAAoBA,EAAI/C,SACxB,8BAAM,0CAAN,IAA0B+C,EAAI9C,eAC9B,8BAAM,sCAAN,IAAsB8C,EAAI7C,YAC1B,8BAAM,wCAAN,IAAwB6C,EAAIC,UAK5BC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,6BACE,8BAAM,oCACN,8BAAM,kCAAN,IAAkBA,EAAKC,IACvB,8BAAM,kCAAN,IAAkBD,EAAKE,IACvB,8BAAM,kCAAN,IAAkBF,EAAKG,IACvB,8BAAM,kCAAN,IAAkBH,EAAKE,IACvB,8BAAM,4CAAN,IAA4BF,EAAKI,KACjC,8BAAM,wCAAN,IAAwBJ,EAAKK,MAC7B,8BAAM,kCAAN,IAAkBL,EAAKM,IACvB,8BAAM,yCAAN,IAAyBN,EAAKO,KAC9B,8BAAM,oCAAN,IAAoBP,EAAKQ,QACzB,8BAAM,uCAAN,IAAuBR,EAAKS,OAC5B,8BAAM,kCAAN,IAAkBT,EAAKU,IACvB,8BAAM,mCAAN,IAAmBV,EAAKW,OAkKfC,EA7JC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAWrE,EAAY,EAAZA,MACtBsE,EAAYC,iBAAO,MADe,EAEEnH,wBAASqE,GAFX,mBAEjC+C,EAFiC,KAElBC,EAFkB,OAGpBrH,mBAAS,IAAtBsH,EAHiC,sBAIpBtH,mBAAS,IAAtBuH,EAJiC,sBAKFvH,wBAASqE,GALP,mBAKjCmD,EALiC,KAKpBC,EALoB,KAkBlCC,EAAe,SAACC,EAAS/H,EAAQgI,EAAQC,EAAQvF,GACrD,IAAMwF,EAAMC,SAASC,eAAe,WACpCL,EAAQM,YAAc,OAEtB,IAAMnD,EAAI8C,EAAShI,EACbmF,EAAI8C,EAASjI,EACbsI,EAAItC,EAAmBG,KAEzByB,GAAgBlF,EAAKY,UAAYsE,EAAYtE,UAC/CyE,EAAQQ,WAAa,EACrBR,EAAQS,cAAgB,EACxBT,EAAQU,cAAgB,EACxBV,EAAQM,YAAc,SAGxBV,EAAUe,KAAK,CAAExD,IAAGC,IAAGwD,EAAGL,EAAGM,EAAGN,EAAG5F,SACnCqF,EAAQc,UAAUX,EAAKhD,EAAGC,EAAGmD,EAAGA,GAEhCP,EAAQe,YAAc,EACtBf,EAAQQ,WAAa,EACrBR,EAAQS,cAAgB,EACxBT,EAAQU,cAAgB,EACxBV,EAAQM,YAAc,SAElBU,EAAW,SAAChB,EAAS/H,EAAQgI,EAAQC,EAAQ/B,EAAO8C,EAAWtG,GACnEqF,EAAQkB,YACRlB,EAAQmB,UAAYhD,EAEpB,IAAMhB,EAAI8C,EAAShI,EACbmF,EAAI8C,EAASjI,EACbmJ,EAAIC,KAAKC,KAAK,EAAIL,GAEpBtG,EAAKkE,MAAQY,GACfO,EAAQQ,WAAa,EACrBR,EAAQS,cAAgB,EACxBT,EAAQU,cAAgB,EACxBV,EAAQM,YAAc,SAGtBN,EAAQe,YAAc,GAGxBpB,EAAUgB,KAAK,CAAExD,IAAGC,IAAGgE,IAAGzG,SAC1BqF,EAAQuB,IAAIpE,EAAGC,EAAGgE,EAAG,EAAG,EAAIC,KAAKG,IACjCxB,EAAQzC,OAERyC,EAAQe,YAAc,EACtBf,EAAQQ,WAAa,EACrBR,EAAQS,cAAgB,EACxBT,EAAQU,cAAgB,EACxBV,EAAQM,YAAc,SA8DxB,OAJA9H,qBAAU,YAvDQ,SAACiJ,EAAQC,GACzB,IADuD,IAAlBC,IAAiB,yDAC/ChC,EAAUiC,OAAS,GACxBjC,EAAUkC,MAEZ,KAAOjC,EAAUgC,OAAS,GACxBhC,EAAUiC,MAGZ,IAAMC,EAAkB,SAACC,EAAO9J,GAAR,OAAoB8J,EAAQ,GAAM9J,GAEpD+J,EAASzC,EAAU0C,QACnBC,EAAMF,EAAOG,WAAW,MACxBlK,GAAUmK,OAAOC,YAAc,IAAM,EAC3CH,EAAII,UAAU,EAAG,EAAY,EAATrK,EAAqB,EAATA,GAE5B0J,IAEFF,EAAOc,SAAQ,SAAAC,GAAK,OAAIxB,EAASkB,EAAKjK,EAAQ6J,EAAgBU,EAAMC,eAAetF,EAAGlF,GAAS6J,EAAgBU,EAAMC,eAAerF,EAAGnF,GAASuK,EAAME,GAAIF,EAAMxD,IAAKwD,MACrKd,EAAWa,SAAQ,SAAAC,GAAK,OAAIzC,EAAamC,EAAKjK,EAAQ6J,EAAgBU,EAAMC,eAAetF,EAAGlF,GAAS6J,EAAgBU,EAAMC,eAAerF,EAAGnF,GAASuK,OAsC1JG,CAAUC,KAAKC,MAAMD,KAAKE,UAAU7H,IAAS2H,KAAKC,MAAMD,KAAKE,UAAUxD,OACtE,CAACA,EAAWrE,EAAOwE,IAGpB,oCACE,yBAAKhG,GAAG,UAAUsJ,IAAI,+BAA+BC,IAAI,mBACzD,kBAAC,EAAD,MACA,4BACEvJ,GAAG,cACHwJ,IAAK1D,EACL2D,MAAOd,OAAOC,YAAc,GAC5Bc,OAAQf,OAAOC,YAAc,GAC7B1J,QA9CmB,SAACG,GACxB,IAAMqE,EAAIrE,EAAEsK,QAAWtK,EAAEyB,OAAO2I,MAAQ,EAAK,GACvC9F,EAAItE,EAAEuK,QAAU,GAElBC,GAAS,EAETC,EAAQ3D,EAAU4D,QAAO,SAAAlF,GAAG,OAAKnB,GAAKmB,EAAInB,GAAKA,GAAMmB,EAAInB,EAAImB,EAAIsC,GAAMxD,GAAKkB,EAAIlB,GAAKA,GAAMkB,EAAIlB,EAAIkB,EAAIuC,KAEtF,IAAjB0C,EAAM3B,SAER0B,GADAC,EAAQ5D,EAAU6D,QAAO,SAAA/E,GAAI,OAAI4C,KAAKoC,KAAK,SAAChF,EAAKtB,EAAIA,EAAM,GAAhB,SAAqBsB,EAAKrB,EAAIA,EAAM,KAAe,EAATqB,EAAK2C,MAC3EQ,OAAS,GAGtB2B,EAAM3B,OAAS,IACb0B,EACEV,KAAKE,UAAUjD,KAAiB+C,KAAKE,UAAUS,EAAM,GAAG5I,OAC1DmF,OAAepD,GACfgD,OAAiBhD,KAEjBoD,EAAeyD,EAAM,GAAG5I,MACxB+E,EAAiB6D,EAAM,GAAG5I,KAAKkE,OAGjCa,OAAiBhD,GACbkG,KAAKE,UAAUjD,KAAiB+C,KAAKE,UAAUS,EAAM,GAAG5I,MAC1DmF,OAAepD,GAEfoD,EAAeyD,EAAM,GAAG5I,WAoB5B,yBAAKT,UAA4B,IAAjBe,EAAM2G,OAAe,YAAc,cACjD,yBAAK1H,UAAU,cAAa,8BAAW,gCAEzC,yBAAKT,GAAG,OAAOS,UAAW2F,EAAc,OAAS,IAC9CA,IACEA,EAAYtE,QAAU,kBAAC,EAAD,CAAS+C,IAAKuB,IAAkB,kBAAC,EAAD,CAAUpB,KAAMoB,QCrLlE6D,G,MAbG,SAAC,GAAuB,IAArB9G,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzB,OACE,yBAAKpD,GAAG,YAAYS,UAAY0C,EAAkB,GAAX,UACpCC,KCAD8G,EAAS,gCACf3J,QAAQ4J,IAAR,kBAAuBD,IAGvB,IAyEeE,EAzEH,WAAO,IAAD,EAEoBxL,mBAAS,CAAEuE,MAAM,EAAOC,aAASH,IAFrD,mBAEToH,EAFS,KAEGC,EAFH,OAG4B1L,mBAAS,CAAEuE,MAAM,EAAOC,aAASH,IAH7D,mBAGTsH,EAHS,KAGOC,EAHP,OAIU5L,mBAAS,CAAE4C,MAAO,GAAIH,WAAY,KAJ5C,mBAITF,EAJS,KAIFG,EAJE,OAKgB1C,mBAAS,CAAE4C,MAAO,GAAIH,WAAY,KALlD,mBAKT7B,EALS,KAKCO,EALD,OAMUnB,oBAAS,GANnB,mBAMT6L,EANS,KAMFC,EANE,OAOI9L,mBAAS,MAPb,mBAOT+L,EAPS,KAOLC,EAPK,OAQchM,mBAAS,IARvB,mBAQT2D,EARS,KAQAsI,EARA,KAUZC,EAAe,KACnB/L,qBAAU,WACR,IAAMgM,EAAM,IAAIC,UAAUd,GAC1BU,EAAMG,GACNpC,OAAOsC,YAAYC,KAAK,eAAgB,kCAAkC,iBACzE,IAEHnM,qBAAU,WACJ4L,IACFA,EAAGQ,OAAS,WACVT,GAAS,GACTnK,QAAQ4J,IAAI,iBACZQ,EAAGS,KAAK,uBACJN,GACFA,KAGJH,EAAGU,QAAU,kBAAM9K,QAAQ4J,IAAI,eAC/BQ,EAAGW,QAAU,SAACC,GAAD,OAAShL,QAAQ4J,IAAI,YAAaoB,IAC/CZ,EAAGa,UAAY,SAAAC,GACb,IAAMC,EAAMvC,KAAKC,MAAMqC,EAAGvK,MACtB,SAAUwK,EACZpK,EAASoK,EAAIC,MACJ,iBAAkBD,EAC3Bb,EAAWa,EAAIE,cAEfrL,QAAQ4J,IAAIuB,OAIjB,CAACf,EAAIG,IAuBR,OACE,yBAAK9K,GAAG,kBACN,kBAAC,EAAD,CAAe6C,UAvBD,SAAC1B,EAAOiC,GACxBkH,EAAc,CAAEnH,KAAMhC,EAAOiC,aAsBUN,cAnBnB,SAAC3B,EAAOiC,GAC5BoH,EAAkB,CAAErH,KAAMhC,EAAOiC,aAkBoCzD,eAfhD,SAACH,GAClBiL,GACFnJ,EAAS,CAAEE,MAAO,GAAIH,WAAY,KAClCtB,EAAYP,GACZmL,EAAGS,KAAH,mBAAoB5L,EAASK,SAA7B,YAAyCL,EAASM,aAElDgL,EAAe,WACb/K,EAAYP,GACZmL,EAAGS,KAAH,mBAAoB5L,EAASK,SAA7B,YAAyCL,EAASM,cAO+CoB,KAAMC,EAAOoB,QAASA,IACzH,kBAAC,EAAD,CAASsD,UAAW1E,EAAME,WAAYG,MAAOL,EAAMK,MAAOqK,YAAarM,IACvE,kBAAC,EAAD,CAAO2D,KAAMkH,EAAWlH,KAAMC,QAASiH,EAAWjH,UAClD,kBAAC,EAAD,CAAWD,KAAMoH,EAAepH,KAAMC,QAASmH,EAAenH,YCnEhD0I,QACW,cAA7BnD,OAAOoD,SAASC,UAEe,UAA7BrD,OAAOoD,SAASC,UAEhBrD,OAAOoD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASxF,SAASC,eAAe,SD2H3C,kBAAmB1G,WACrBA,UAAUkM,cAAc3B,MAAM4B,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e30d536f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nconst ReactMap = ({ google, center = { lat: 4.6032624, lng: -74.0652016 }, onDragend = () => { } }) => {\r\n  const [_center, setCenter] = useState(center);\r\n\r\n  useEffect(() => {\r\n    setCenter(center);\r\n  }, [center, setCenter])\r\n\r\n  return (\r\n    <Map\r\n      google={google}\r\n      zoom={15}\r\n      initialCenter={_center}\r\n      center={_center}\r\n      onClick={(_mp, _m, e) => {\r\n        const nCenter = { lat: e.latLng.lat(), lng: e.latLng.lng() };\r\n        setCenter(nCenter);\r\n        onDragend(nCenter);\r\n      }}>\r\n      <Marker position={center} />\r\n    </Map>\r\n  )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyALfvSRLCN3dLyVvuuZaVgBxDj-YnEF7gc',\r\n})(ReactMap);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ChangeLocation.css';\r\nimport ReactMap from './ReactMap';\r\n\r\n\r\nconst ChangeLocation = ({ currentLocation, changeLocation, cancel }) => {\r\n\r\n  const [position, setPosition] = useState({ lat: currentLocation.latitude, lng: currentLocation.longitude });\r\n\r\n  // const [latitude, setLatitude] = useState(currentLocation.latitude);\r\n  // const [longitude, setLongitude] = useState(currentLocation.longitude);\r\n\r\n  const getCurrent = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(p => {\r\n        setPosition({ lat: p.coords.latitude, lng: p.coords.longitude });\r\n      });\r\n    } else {\r\n      console.error('No geolocation');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"changelocation-container\">\r\n      <div>\r\n        <span>Change Location</span>\r\n        <span>{position.lat}, {position.lng}</span>\r\n        <button title=\"Your Location\" onClick={getCurrent}>\r\n          <i className=\"fas fa-crosshairs\" />\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <ReactMap\r\n          center={position}\r\n          onDragend={({ lat, lng }) => setPosition({ lat, lng })} />\r\n      </div>\r\n      <div>\r\n        <button onClick={() => cancel()}>Cancel</button>\r\n        <button onClick={() => changeLocation({ latitude: position.lat, longitude: position.lng })}>Change</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nChangeLocation.propTypes = {\r\n  currentLocation: PropTypes.object,\r\n  changeLocation: PropTypes.func.isRequired,\r\n  cancel: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ChangeLocation;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './About.css';\r\n\r\nconst About = ({ close }) => {\r\n  return (\r\n    <div id=\"about\">\r\n      <span>Kyllur</span>\r\n      <div>\r\n        <span>Why Kyllur?</span>\r\n        <span>\r\n          The name comes frome the sound of the Quechuan word for star: <i>quyllur</i>.\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <span>The project</span>\r\n        <span>\r\n\r\n          We want you to explore the sky above you, explore the stars and satellites above a location \r\n          in real <small>ish</small> time.\r\n        </span>\r\n        <ul style={{listStyleType: 'none'}}>\r\n          <li>Interact with the objects in the sky! Click on them for more details.</li>\r\n          <li>Don't like your sky? Change the your location to see a new sky</li>\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <span>How do we do it?</span>\r\n        <span>\r\n          We use <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.n2yo.com/\">N2YO</a> to access satellite locations in real time.\r\n          We also use data from the <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.astronexus.com/hyg\">HYG star database</a> in conjunction with some maths in order to calculate your sky in real time.\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <span>Who are we?</span>\r\n        <span>\r\n          We are <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://pedrito.dev\">Pedro Salazar</a> & <a target=\"_blank\" href=\"https://dnarvaez27.github.io/\" rel=\"noopener noreferrer\">David Narvaez</a>\r\n          <span>. Two students that have been starting projects at the last possible minute since 90's</span>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAbout.propTypes = {\r\n  close: PropTypes.func.isRequired\r\n};\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './DataShow.css';\r\n\r\nconst DataShow = ({ data }) => {\r\n  const [state, setState] = useState({ state: 0, view: data.satellites });\r\n\r\n  useEffect(() => {\r\n    setState(prev => {\r\n      return {\r\n        state: prev.state,\r\n        view: prev.state === 0 ? data.satellites : data.stars\r\n      }\r\n    })\r\n  }, [data]);\r\n\r\n  const changeView = (state, attr) => {\r\n    return () => setState({ state, view: data[attr] });\r\n  };\r\n\r\n  const mapView = (e, key) => {\r\n    if (state.state === 0) {\r\n      return (\r\n        <div key={`sat_${key}`}>\r\n          <span>{`Satelite ${e.satname}`}</span>\r\n          <span>\r\n            <i className=\"fas fa-globe-americas\" />\r\n            <span>{e.intDesignator}</span>\r\n          </span>\r\n          <span>\r\n            <i className=\"fas fa-rocket\" />\r\n            <span>{e.launchDate}</span>\r\n          </span>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div key={`star_${key}`}>\r\n          <span>{`Star ${e.nombre}`}</span>\r\n          <span>{`Mass ${e.masa}`}</span>\r\n          <span>{e.descubrimiento}</span>\r\n          <span>{e.tipo_deteccion}</span>\r\n          <div>\r\n            <button>\r\n              <i className=\"fas fa-heart\" />\r\n              <i className=\"far fa-heart\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"datashow-container\">\r\n      <div>\r\n        <div>\r\n          <button className={state.state === 0 ? 'active' : ''} onClick={changeView(0, 'satellites')}>Satellites</button>\r\n          <button className={state.state === 1 ? 'active' : ''} onClick={changeView(1, 'stars')}>Stars</button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {state.view.map((e, i) => mapView(e, i))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDataShow.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n}\r\n\r\nexport default DataShow;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Queries.css';\r\n\r\nconst Queries = ({ queries }) => {\r\n\r\n  return (\r\n    <div id=\"queries-container\">\r\n      {queries.reverse().map((q, i) => (\r\n        <div key={`cord_${i}`}>\r\n          <span>({q.latitude}, {q.longitude})</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nQueries.propTypes = {\r\n  queries: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Queries;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './NavigationBar.css';\r\nimport ChangeLocation from './ChangeLocation/ChangeLocation';\r\nimport About from './About/About';\r\nimport DataShow from './DataShow/DataShow';\r\nimport Queries from './Queries/Queries';\r\n\r\nconst NavigationBar = ({ openModal, openFullModal, changeLocation, data, queries }) => {\r\n\r\n  const [position, setPosition] = useState({ latitude: 0, longitude: 0, accuracy: 0 });\r\n  const [state, setState] = useState(-1);\r\n\r\n  const showChangeLocation = () => {\r\n    openModal(true, <ChangeLocation\r\n      currentLocation={position}\r\n      changeLocation={(p) => {\r\n        setPosition(p);\r\n        openModal(false, undefined);\r\n      }}\r\n      cancel={() => openModal(false, undefined)} />);\r\n  };\r\n\r\n  const showAbout = () => {\r\n    setState(1);\r\n    openFullModal(true, <About close={() => openModal(false, undefined)} />);\r\n  };\r\n\r\n  const showData = () => {\r\n    setState(3);\r\n    openFullModal(true, <DataShow data={data} />);\r\n  };\r\n\r\n  const showQueries = () => {\r\n    setState(2);\r\n    openFullModal(true, <Queries queries={queries} />);\r\n  };\r\n\r\n  const closeFullModal = () => {\r\n    setState(-1);\r\n    openFullModal(false, undefined);\r\n  }\r\n\r\n  const closeOr = (st, or) => {\r\n    return (state !== st\r\n      ? (or)\r\n      : (<><i className=\"fas fa-times-circle\" /><span>Close</span></>)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    showAbout();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (state === 2) {\r\n      openFullModal(true, <Queries queries={queries} />);\r\n    }\r\n  }, [queries]);\r\n\r\n  useEffect(() => {\r\n    changeLocation(position);\r\n  }, [position]);\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(p => {\r\n        setPosition({ latitude: p.coords.latitude, longitude: p.coords.longitude });\r\n      });\r\n    } else {\r\n      console.error('No geolocation');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (state === 3) {\r\n      openFullModal(true, <DataShow data={data} />);\r\n    }\r\n  }, [state, data]);\r\n\r\n  return (\r\n    <div id=\"nav-bar\">\r\n      <div id=\"search-container\">\r\n        <button onClick={showChangeLocation}>\r\n          <i className=\"fas fa-search\" />\r\n          <span>Change Location</span>\r\n        </button>\r\n        <button onClick={state !== 1 ? showAbout : closeFullModal} className={state === 1 ? 'active' : ''}>\r\n          {closeOr(1, (\r\n            <>\r\n              <i className=\"fas fa-question-circle\" />\r\n              <span>About</span>\r\n            </>\r\n          ))}\r\n        </button>\r\n      </div>\r\n      <div id=\"footer-container\">\r\n        {/* <button onClick={state !== 2 ? showQueries : closeFullModal} className={state === 2 ? 'active' : ''}>\r\n          {closeOr(2, (\r\n            <>\r\n              <i className=\"fas fa-stream\" />\r\n              <span>Queries</span>\r\n            </>\r\n          ))}\r\n        </button> */}\r\n        {/* <button onClick={state !== 3 ? showData : closeFullModal} className={state === 3 ? 'active' : ''}>\r\n          {closeOr(3, (\r\n            <>\r\n              <i className=\"fas fa-info-circle\" />\r\n              <span>Data</span>\r\n            </>\r\n          ))}\r\n        </button> */}\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nNavigationBar.propTypes = {\r\n  openModal: PropTypes.func.isRequired,\r\n  openFullModal: PropTypes.func.isRequired,\r\n  changeLocation: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  queries: PropTypes.array.isRequired\r\n};\r\n\r\nexport default NavigationBar;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ open, content }) => {\r\n  return (\r\n    <div id=\"modal\" className={!open ? 'hidden' : ''}>\r\n      <div id=\"modal-bg\" />\r\n      <div id=\"modal-content\">{content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  content: PropTypes.object\r\n}\r\n\r\nexport default Modal;","import React, { useState, useEffect } from 'react';\r\n\r\nconst Pin = ({refresh}) => {\r\n  useEffect(()=>{}, [refresh]);\r\n  const [show, setShow] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          x=\"0px\"\r\n          y=\"0px\"\r\n          viewBox=\"0 0 384 512\"\r\n          id=\"img-pin\"\r\n          onClick={_=>setShow(false)}\r\n          className={show?'unclicked':''}>\r\n        <path\r\n          fill=\"#ea4335\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M0,192C0,86,86,0,192,0S384,86,384,192c0,77.41-118.44,320-192,320S0,269.41,0,192Zm192,80a80,80,0,1,0-80-80A80,80,0,0,0,192,272Z\">\r\n          <animate\r\n            id=\"animation-to-check\"\r\n            repeatCount=\"1\"\r\n            dur=\"2.5s\"\r\n            attributeName=\"d\"\r\n            fill=\"freeze\"\r\n            begin=\"click\"\r\n            calcMode=\"spline\"\r\n            keySplines=\"0.1 1 0.56 0.72; 0.1 1 0.56 0.72\"\r\n            values=\"\r\n              M0,192C0,86,86,0,192,0S384,86,384,192c0,77.41-118.44,320-192,320S0,269.41,0,192Zm192,80a80,80,0,1,0-80-80A80,80,0,0,0,192,272Z;\r\n              M0,192C0,86,86,0,192,0S384,86,384,192c0,77.41-73.56,182.65-192,182.65S0,269.41,0,192Zm192,80a80,80,0,1,0-80-80A80,80,0,0,0,192,272Z;\r\n              M0,336.12c0-106,86-192,192-192s192,86,192,192C384,413.54,310.44,512,192,512S0,413.54,0,336.12Zm192,80a80,80,0,1,0-80-80A80,80,0,0,0,192,416.12Z\"\r\n            />\r\n        </path>\r\n      </svg>\r\n      <div id=\"pin-bubble\" className={show?'':'hide'}>\r\n        <span>Here you are!</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pin;\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './StarMap.css';\r\nimport Pin from './Pin';\r\n\r\nconst settings = {\r\n  user: {\r\n    radius: 8,\r\n    color: '#ea4335'\r\n  },\r\n  satellite: {\r\n    radius: 3,\r\n    color: '#06ABC2',\r\n    size: 25\r\n  },\r\n  star: {\r\n    radius: 1,\r\n    color: '#FFFFFF'\r\n  }\r\n};\r\n\r\nconst SatInfo = ({ sat }) => {\r\n  return (\r\n    <div>\r\n      <span><b>Satellite</b></span>\r\n      <span><b>Name:</b> {sat.satname}</span>\r\n      <span><b>Designator:</b> {sat.intDesignator}</span>\r\n      <span><b>Launch:</b> {sat.launchDate}</span>\r\n      <span><b>Altitude:</b> {sat.satalt}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StarInfo = ({ star }) => {\r\n  return (\r\n    <div>\r\n      <span><b>Star</b></span>\r\n      <span><b>HD:</b> {star.hd}</span>\r\n      <span><b>BF:</b> {star.bf}</span>\r\n      <span><b>GL:</b> {star.gl}</span>\r\n      <span><b>BF:</b> {star.bf}</span>\r\n      <span><b>Constelation:</b> {star.con}</span>\r\n      <span><b>Distance:</b> {star.dist}</span>\r\n      <span><b>HR:</b> {star.hr}</span>\r\n      <span><b>Magnitude:</b> {star.mag}</span>\r\n      <span><b>Name:</b> {star.proper}</span>\r\n      <span><b>Spetrum:</b> {star.spect}</span>\r\n      <span><b>RA:</b> {star.ra}</span>\r\n      <span><b>DEC:</b> {star.dec}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StarMap = ({ satelites, stars }) => {\r\n  const canvasRef = useRef(null);\r\n  const [constellation, setConstellation] = useState(undefined);\r\n  const [starStore] = useState([]);\r\n  const [satsStore] = useState([]);\r\n  const [lastClicked, setLastClicked] = useState(undefined);\r\n\r\n  const drawCenter = (context, center) => {\r\n    // setTimeout(() => {\r\n    //   context.beginPath();\r\n    //   context.fillStyle = settings.user.color;\r\n    //   context.arc(center, center, settings.user.radius, 0, 2 * Math.PI);\r\n    //   context.fill();\r\n    // }, 2500)\r\n\r\n    // const img = document.getElementById(\"img-pin\");\r\n    // context.drawImage(img, center, center, settings.satellite.size, settings.satellite.size);\r\n  }\r\n  const drawSatelite = (context, center, xcoord, ycoord, data) => {\r\n    const img = document.getElementById(\"img-sat\");\r\n    context.shadowColor = '#FFF';\r\n\r\n    const x = xcoord + center;\r\n    const y = ycoord + center;\r\n    const s = settings.satellite.size;\r\n\r\n    if (lastClicked && (data.satname === lastClicked.satname)) {\r\n      context.shadowBlur = 8;\r\n      context.shadowOffsetX = 0;\r\n      context.shadowOffsetY = 0;\r\n      context.shadowColor = \"white\";\r\n    }\r\n\r\n    satsStore.push({ x, y, w: s, h: s, data });\r\n    context.drawImage(img, x, y, s, s);\r\n\r\n    context.globalAlpha = 1;\r\n    context.shadowBlur = 0;\r\n    context.shadowOffsetX = 0;\r\n    context.shadowOffsetY = 0;\r\n    context.shadowColor = \"white\";\r\n  }\r\n  const drawStar = (context, center, xcoord, ycoord, color, magnitude, data) => {\r\n    context.beginPath();\r\n    context.fillStyle = color;\r\n\r\n    const x = xcoord + center;\r\n    const y = ycoord + center;\r\n    const r = Math.ceil(6 - magnitude);\r\n\r\n    if (data.con === constellation) {\r\n      context.shadowBlur = 8;\r\n      context.shadowOffsetX = 0;\r\n      context.shadowOffsetY = 0;\r\n      context.shadowColor = \"white\";\r\n    }\r\n    else {\r\n      context.globalAlpha = 0.50;\r\n    }\r\n\r\n    starStore.push({ x, y, r, data })\r\n    context.arc(x, y, r, 0, 2 * Math.PI);\r\n    context.fill();\r\n\r\n    context.globalAlpha = 1;\r\n    context.shadowBlur = 0;\r\n    context.shadowOffsetX = 0;\r\n    context.shadowOffsetY = 0;\r\n    context.shadowColor = \"white\";\r\n  }\r\n\r\n  const redrawAll = (_stars, _satelites, paint = true) => {\r\n    while (starStore.length > 0) {\r\n      starStore.pop();\r\n    }\r\n    while (satsStore.length > 0) {\r\n      satsStore.pop();\r\n    }\r\n\r\n    const scaleCoordinate = (coord, center) => (coord / 70) * center;\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const center = (window.innerHeight - 40) / 2;\r\n    ctx.clearRect(0, 0, center * 2, center * 2);\r\n\r\n    if (paint) {\r\n      drawCenter(ctx, center);\r\n      _stars.forEach(point => drawStar(ctx, center, scaleCoordinate(point.canvasPosition.x, center), scaleCoordinate(point.canvasPosition.y, center), point.ci, point.mag, point));\r\n      _satelites.forEach(point => drawSatelite(ctx, center, scaleCoordinate(point.canvasPosition.x, center), scaleCoordinate(point.canvasPosition.y, center), point));\r\n    }\r\n  };\r\n\r\n  const addClickListener = (e) => {\r\n    const x = e.clientX - (e.target.width / 2) - 44;\r\n    const y = e.clientY - 20;\r\n\r\n    let isStar = false;\r\n\r\n    let found = satsStore.filter(sat => (x >= sat.x && x <= (sat.x + sat.w) && y >= sat.y && y <= (sat.y + sat.h)));\r\n\r\n    if (found.length === 0) {\r\n      found = starStore.filter(star => Math.sqrt((star.x - x) ** 2 + (star.y - y) ** 2) <= star.r * 2);\r\n      isStar = found.length > 0;\r\n    }\r\n\r\n    if (found.length > 0) {\r\n      if (isStar) {\r\n        if (JSON.stringify(lastClicked) === JSON.stringify(found[0].data)) {\r\n          setLastClicked(undefined);\r\n          setConstellation(undefined);\r\n        } else {\r\n          setLastClicked(found[0].data);\r\n          setConstellation(found[0].data.con);\r\n        }\r\n      } else {\r\n        setConstellation(undefined);\r\n        if (JSON.stringify(lastClicked) === JSON.stringify(found[0].data)) {\r\n          setLastClicked(undefined);\r\n        } else {\r\n          setLastClicked(found[0].data);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    redrawAll(JSON.parse(JSON.stringify(stars)), JSON.parse(JSON.stringify(satelites)));\r\n  }, [satelites, stars, constellation]);\r\n\r\n  return (\r\n    <>\r\n      <img id=\"img-sat\" src=\"./assets/images/Satelite.png\" alt=\"satellite-icon\" />\r\n      <Pin />\r\n      <canvas\r\n        id=\"star-canvas\"\r\n        ref={canvasRef}\r\n        width={window.innerHeight - 40}\r\n        height={window.innerHeight - 40}\r\n        onClick={addClickListener} />\r\n      <div className={stars.length === 0 ? 'loader-on' : 'loader-off'}>\r\n        <div className=\"lds-ripple\"><div></div><div></div></div>\r\n      </div>\r\n      <div id=\"info\" className={lastClicked ? 'show' : ''}>\r\n        {lastClicked &&\r\n          (lastClicked.satname ? <SatInfo sat={lastClicked} /> : <StarInfo star={lastClicked} />)\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nStarMap.propTypes = {\r\n  satelites: PropTypes.array,\r\n  stars: PropTypes.array\r\n}\r\n\r\nexport default StarMap;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FullModal.css';\r\n\r\nconst FullModal = ({ open, content }) => {\r\n  return (\r\n    <div id=\"fullmodal\" className={!open ? 'hidden' : ''}>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nFullModal.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  content: PropTypes.object\r\n}\r\n\r\nexport default FullModal;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NavigationBar from './NavigationBar/NavigationBar';\nimport Modal from './Modal/Modal';\nimport StarMap from './StarMap/StarMap';\nimport FullModal from './FullModal/FullModal';\n\nconst wssURI = 'wss://kyllur.herokuapp.com/ws';\nconsole.log(`WSS URL ${wssURI}`);\n\n\nconst App = () => {\n\n  const [modalState, setModalState] = useState({ open: false, content: undefined });\n  const [fullModalState, setFullModalState] = useState({ open: false, content: undefined });\n  const [state, setState] = useState({ stars: [], satellites: [] });\n  const [position, setPosition] = useState({ stars: [], satellites: [] });\n  const [ready, setReady] = useState(false);\n  const [ws, setWs] = useState(null);\n  const [queries, setQueries] = useState([]);\n\n  let initialFetch = null;\n  useEffect(() => {\n    const nWs = new WebSocket(wssURI);\n    setWs(nWs);\n    window.particlesJS.load('particles-js', '/assets/scripts/particles.json', () => { });\n  }, []);\n\n  useEffect(() => {\n    if (ws) {\n      ws.onopen = () => {\n        setReady(true);\n        console.log('WS: Connected');\n        ws.send('SUBSCRIBE;locations');\n        if (initialFetch) {\n          initialFetch();\n        }\n      };\n      ws.onclose = () => console.log('WS: Closed');\n      ws.onerror = (err) => console.log('WS: Error', err);\n      ws.onmessage = ev => {\n        const msg = JSON.parse(ev.data);\n        if ('LIVE' in msg) {\n          setState(msg.LIVE);\n        } else if ('CH_LOCATIONS' in msg) {\n          setQueries(msg.CH_LOCATIONS);\n        } else {\n          console.log(msg);\n        }\n      }\n    }\n  }, [ws, initialFetch]);\n\n  const openModal = (state, content) => {\n    setModalState({ open: state, content });\n  };\n\n  const openFullModal = (state, content) => {\n    setFullModalState({ open: state, content });\n  };\n\n  const changeLocation = (position) => {\n    if (ready) {\n      setState({ stars: [], satellites: [] });\n      setPosition(position);\n      ws.send(`LOCATION;${position.latitude};${position.longitude}`);\n    } else {\n      initialFetch = () => {\n        setPosition(position);\n        ws.send(`LOCATION;${position.latitude};${position.longitude}`);\n      }\n    }\n  };\n\n  return (\n    <div id=\"main-container\">\n      <NavigationBar openModal={openModal} openFullModal={openFullModal} changeLocation={changeLocation} data={state} queries={queries} />\n      <StarMap satelites={state.satellites} stars={state.stars} coordinates={position} />\n      <Modal open={modalState.open} content={modalState.content} />\n      <FullModal open={fullModalState.open} content={fullModalState.content} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}